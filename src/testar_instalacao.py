#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ BET BOOSTER - Teste de Instala√ß√£o
Verifica se todos os componentes est√£o funcionando corretamente
"""

import os
import sys
import importlib.util

def test_file_exists(filepath, description):
    """Testa se um arquivo existe"""
    if os.path.exists(filepath):
        print(f"‚úÖ {description}: OK")
        return True
    else:
        print(f"‚ùå {description}: FALTANDO")
        return False

def test_import(module_name, description):
    """Testa se um m√≥dulo pode ser importado"""
    try:
        __import__(module_name)
        print(f"‚úÖ {description}: OK")
        return True
    except ImportError as e:
        print(f"‚ùå {description}: ERRO - {e}")
        return False

def main():
    """Executa todos os testes"""
    print("üß™ BET BOOSTER - Teste de Instala√ß√£o")
    print("=" * 50)
    
    # Diret√≥rio atual
    current_dir = os.path.dirname(os.path.abspath(__file__))
    print(f"üìÅ Diret√≥rio: {current_dir}")
    print()
    
    # Testes de arquivos
    print("üìÑ TESTANDO ARQUIVOS:")
    files_ok = True
    
    essential_files = [
        ("interface_apostas.py", "Programa Principal"),
        ("sofascore_api.py", "M√≥dulo de API"),
        ("times_database.json", "Base de Dados"),
        ("bet-booster.ico", "√çcone"),
        ("launcher_bet_booster.py", "Launcher")
    ]
    
    for filename, description in essential_files:
        filepath = os.path.join(current_dir, filename)
        if not test_file_exists(filepath, description):
            files_ok = False
    
    print()
    
    # Testes de m√≥dulos Python
    print("üêç TESTANDO M√ìDULOS PYTHON:")
    modules_ok = True
    
    # M√≥dulos padr√£o
    standard_modules = [
        ("tkinter", "Interface Gr√°fica"),
        ("json", "Manipula√ß√£o JSON"),
        ("os", "Sistema Operacional"),
        ("threading", "Multi-threading")
    ]
    
    for module, description in standard_modules:
        if not test_import(module, description):
            modules_ok = False
    
    # M√≥dulos externos
    external_modules = [
        ("requests", "Requisi√ß√µes HTTP")
    ]
    
    for module, description in external_modules:
        if not test_import(module, description):
            print(f"‚ö†Ô∏è {description}: Ser√° instalado automaticamente")
    
    print()
    
    # Teste espec√≠fico do programa
    print("üéØ TESTANDO PROGRAMA:")
    program_ok = True
    
    try:
        # Verificar se o programa principal pode ser importado
        spec = importlib.util.spec_from_file_location(
            "interface_apostas", 
            os.path.join(current_dir, "interface_apostas.py")
        )
        if spec and spec.loader:
            print("‚úÖ Programa Principal: Import√°vel")
        else:
            print("‚ùå Programa Principal: Erro de importa√ß√£o")
            program_ok = False
            
    except Exception as e:
        print(f"‚ùå Programa Principal: {e}")
        program_ok = False
    
    # Verificar √≠cone
    icon_path = os.path.join(current_dir, "bet-booster.ico")
    if os.path.exists(icon_path):
        size = os.path.getsize(icon_path)
        print(f"‚úÖ √çcone: OK ({size} bytes)")
    else:
        print("‚ùå √çcone: Arquivo n√£o encontrado")
        program_ok = False
    
    print()
    
    # Resultado final
    print("üìä RESULTADO FINAL:")
    print("=" * 30)
    
    if files_ok and modules_ok and program_ok:
        print("üéâ TODOS OS TESTES PASSARAM!")
        print("‚úÖ O Bet Booster est√° pronto para instala√ß√£o")
        print("‚úÖ Execute BetBoosterInstaller.py para instalar")
    else:
        print("‚ùå ALGUNS TESTES FALHARAM")
        if not files_ok:
            print("‚ö†Ô∏è Arquivos essenciais est√£o faltando")
        if not modules_ok:
            print("‚ö†Ô∏è M√≥dulos Python n√£o dispon√≠veis")
        if not program_ok:
            print("‚ö†Ô∏è Programa principal tem problemas")
        print()
        print("üîß Solu√ß√µes:")
        print("‚Ä¢ Verifique se todos os arquivos est√£o na pasta")
        print("‚Ä¢ Instale Python de https://python.org/downloads")
        print("‚Ä¢ Execute: pip install requests")
    
    print()
    input("Pressione Enter para sair...")

if __name__ == "__main__":
    main()
